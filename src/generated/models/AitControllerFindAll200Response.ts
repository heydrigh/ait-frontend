/* tslint:disable */
/* eslint-disable */
/**
 * AIT  doc
 * AIT documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Ait } from './Ait';
import {
    AitFromJSON,
    AitFromJSONTyped,
    AitToJSON,
    AitToJSONTyped,
} from './Ait';

/**
 * 
 * @export
 * @interface AitControllerFindAll200Response
 */
export interface AitControllerFindAll200Response {
    /**
     * 
     * @type {Array<Ait>}
     * @memberof AitControllerFindAll200Response
     */
    data?: Array<Ait>;
    /**
     * 
     * @type {number}
     * @memberof AitControllerFindAll200Response
     */
    total?: number;
}

/**
 * Check if a given object implements the AitControllerFindAll200Response interface.
 */
export function instanceOfAitControllerFindAll200Response(value: object): value is AitControllerFindAll200Response {
    return true;
}

export function AitControllerFindAll200ResponseFromJSON(json: any): AitControllerFindAll200Response {
    return AitControllerFindAll200ResponseFromJSONTyped(json, false);
}

export function AitControllerFindAll200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AitControllerFindAll200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AitFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function AitControllerFindAll200ResponseToJSON(json: any): AitControllerFindAll200Response {
    return AitControllerFindAll200ResponseToJSONTyped(json, false);
}

export function AitControllerFindAll200ResponseToJSONTyped(value?: AitControllerFindAll200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AitToJSON)),
        'total': value['total'],
    };
}

